
[build-system]
build-backend = 'setuptools.build_meta'
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]

[tool.setuptools]
packages = ["asreview"]

[tool.setuptools.package-data]
asreview = [
    "webapp/build/*",
    "webapp/build/static/*/*",
]

[tool.setuptools.exclude-package-data]
asreview = [
    ".gitignore",
    "docs",
    "asreview/webapp/node_modules",
    "build",
    "*.tests.*",
]


[tool.setuptools_scm]
write_to = "asreview/_version.py"

[project]
name = "asreview"
description = "ASReview LAB - A tool for AI-assisted systematic reviews"
authors = [
    { name = "ASReview LAB developers", email = "asreview@uu.nl" }
]
keywords=["systematic review", "machine-learning"]
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing :: General",
    "Framework :: Flask",
]
license = {text = "Apache 2.0"}
dependencies = [
    "numpy",
    "pandas>=2,<3",
    "scikit-learn",
    "rispy~=0.7.0",
    "setuptools",
    "flask>=2.3.0",
    "flask_cors",
    "flask-login>=0.6.3",
    "flask-mail",
    "Werkzeug>=2.3.2",
    "openpyxl>=3.0.3",
    "jsonschema",
    "filelock",
    "Flask-SQLAlchemy>=3.0.2",
    "requests",
    "tqdm",
    "rich",
    "waitress",
    "gevent>=20",
    "datahugger>=0.2",
    "synergy_dataset",
    "sqlalchemy-utils",
    "tomli; python_version < '3.11'",
]
dynamic = ["version"]
requires-python = ">=3.10"

[project.scripts]
asreview = "asreview.__main__:main"

[project.entry-points."asreview.entry_points"]
lab = "asreview.webapp._entry_points.lab:lab_entry_point"
auth-tool = "asreview.webapp._entry_points.auth_tool:AuthTool"
simulate = "asreview.simulation.cli:_cli_simulate"
algorithms = "asreview.models.cli:cli_algorithms"

[project.entry-points."asreview.entry_points_internal"]
task-manager = "asreview.webapp._entry_points.task_manager:main"

[project.entry-points."asreview.readers"]
".csv" = "asreview.data:CSVReader"
".tab" = "asreview.data:CSVReader"
".tsv" = "asreview.data:CSVReader"
".ris" = "asreview.data:RISReader"
".txt" = "asreview.data:RISReader"
".xlsx" = "asreview.data:ExcelReader"

[project.entry-points."asreview.writers"]
".csv" = "asreview.data:CSVWriter"
".tab" = "asreview.data:TSVWriter"
".tsv" = "asreview.data:TSVWriter"
".ris" = "asreview.data:RISWriter"
".txt" = "asreview.data:RISWriter"
".xlsx" = "asreview.data:ExcelWriter"

[project.entry-points."asreview.datasets"]
synergy = "asreview.datasets:SynergyDataGroup"

[project.entry-points."asreview.models.classifiers"]
svm = "asreview.models.classifiers:SVM"
nb = "asreview.models.classifiers:NaiveBayes"
rf = "asreview.models.classifiers:RandomForest"
logistic = "asreview.models.classifiers:Logistic"

[project.entry-points."asreview.models.feature_extractors"]
tfidf = "asreview.models.feature_extractors:Tfidf"
onehot = "asreview.models.feature_extractors:OneHot"

[project.entry-points."asreview.models.balancers"]
balanced = "asreview.models.balancers:Balanced"

[project.entry-points."asreview.models.queriers"]
random = "asreview.models.queriers:Random"
top_down = "asreview.models.queriers:TopDown"
max = "asreview.models.queriers:Max"
uncertainty = "asreview.models.queriers:Uncertainty"
max_random = "asreview.models.queriers:HybridMaxRandom"
max_uncertainty = "asreview.models.queriers:HybridMaxUncertainty"

[project.entry-points."asreview.models.stoppers"]
last_relevant = "asreview.models.stoppers:LastRelevant"
n_labeled = "asreview.models.stoppers:NLabeled"
q_labeled = "asreview.models.stoppers:QuantileLabeled"
is_fittable = "asreview.models.stoppers:IsFittable"
n_consecutive_irrelevant = "asreview.models.stoppers:NConsecutiveIrrelevant"

[project.optional-dependencies]
lint = ["ruff", "check-manifest"]
test = [
    "coverage",
    "pytest",
    "pytest-random-order",
    "pytest-selenium",
]
docs = [
    "ipython",
    "sphinx",
    "pydata-sphinx-theme",
    "sphinx-reredirects",
    "sphinxcontrib-youtube",
    "nbsphinx",
    "sphinx-design",
    "myst-parser",
]
dev = [
    "asreview[lint]",
    "asreview[test]",
    "asreview[docs]"
]

[project.urls]
"Bug Tracker" = "https://github.com/asreview/asreview/issues"
Documentation = "https://asreview.readthedocs.io/en/stable//"
Downloads = "https://github.com/asreview/asreview/releases"
Homepage = "https://asreview.ai/"
"Release Notes" = "https://github.com/asreview/asreview/releases"
"Slack Chat" = "https://asreviewcommunity.slack.com"
"Source Code" = "https://github.com/asreview/asreview"
YouTube = "https://www.youtube.com/@ASReview"

[ruff.lint]
select = ["E", "F", "UP", "I", "B"]
ignore = ["B904", "B008"]
exclude = [
    ".venv",
    ".vscode",
    "_build",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "versioneer.py",
    "docs/source/conf.py",
    "asreview/_version.py",
]
line-length = 88
indent-width = 4

[tool.ruff.lint.per-file-ignores]
"asreview/config.py" = ["E501"]

[tool.ruff.lint.isort]
force-single-line = true
case-sensitive = true

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.pytest.ini_options]
addopts = "--ignore=asreview/webapp/tests/integration_tests"
markers = [
    "internet_required: requires internet connection to run",
]
