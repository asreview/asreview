import inspect
import sys
import pytest
import asreview


def list_members(pkg, level=0, level_max=5):
    """
    function that builds a list of `pkg`'s interface using recursion
    """
    r = list()
    if pkg.__spec__.origin.startswith(inspect.__file__[:-11]):
        # some kind of system package
        return r
    members = inspect.getmembers(pkg)
    for name, value in members:
        if inspect.isbuiltin(value) or \
                name.endswith("__") or \
                name in sys.builtin_module_names:
            continue
        s = f"{pkg.__name__}.{name}"
        r.append(s)
        if dont_recurse(s):
            # terminate recursing to avoid problems with
            # recursion limit due to cyclic imports
            continue
        if inspect.ismodule(value) or level > level_max:
            r += list_members(value, level + 1)
    return r


def dont_recurse(mod):
    # modules defined here should not be recursed, they are not part of ASReview
    return mod in [
        "asreview._version",
        "asreview._version.os",
        "asreview._version.re",
        "asreview._version.json",
        "asreview._version.subprocess",
        "asreview.data.base.hashlib",
        "asreview.data.base.HTTPError",
        "asreview.data.base.np",
        "asreview.data.base.Path",
        "asreview.data.base.pd",
        "asreview.data.base.urlopen",
        "asreview.data.base.urlparse",
        "asreview.data.statistics.np",
        "asreview.datasets.ABC",
        "asreview.datasets.abstractmethod",
        "asreview.datasets.json",
        "asreview.datasets.Path",
        "asreview.datasets.socket",
        "asreview.datasets.URLError",
        "asreview.datasets.urlopen",
        "asreview.entry_points.base.ABC",
        "asreview.entry_points.base.abstractclassmethod",
        "asreview.entry_points.base.argparse",
        "asreview.entry_points.simulate.logging",
        "asreview.entry_points.simulate.Path",
        "asreview.entry_points.simulate.shutil",
        "asreview.entry_points.state_inspect.argparse",
        "asreview.entry_points.state_inspect.Path",
        "asreview.entry_points.state_inspect.pd",
        "asreview.io.csv_reader.pd",
        "asreview.io.excel_reader.pd",
        "asreview.io.paper_record.os",
        "asreview.io.paper_record.pd",
        "asreview.io.ris_reader.io",
        "asreview.io.ris_reader.logging",
        "asreview.io.ris_reader.pandas",
        "asreview.io.ris_reader.re",
        "asreview.io.ris_reader.rispy",
        "asreview.io.ris_reader.urlopen",
        "asreview.io.ris_writer.pd",
        "asreview.io.ris_writer.rispy",
        "asreview.io.utils.logging",
        "asreview.io.utils.np",
        "asreview.io.utils.pd",
        "asreview.models.balance.base.abstractmethod",
        "asreview.models.balance.double.np",
        "asreview.models.balance.triple.logging",
        "asreview.models.balance.triple.np",
        "asreview.models.balance.undersample.np",
        "asreview.models.base.ABC",
        "asreview.models.base.inspect",
        "asreview.models.base.np",
        "asreview.models.classifiers.logistic.logging",
        "asreview.models.classifiers.lstm_base.logging",
        "asreview.models.classifiers.lstm_pool.logging",
        "asreview.models.classifiers.nb.logging",
        "asreview.models.classifiers.nn_2_layer.logging",
        "asreview.models.classifiers.nn_2_layer.scipy",
        "asreview.models.classifiers.utils.logging",
        "asreview.models.feature_extraction.base.abstractmethod",
        "asreview.models.feature_extraction.base.hstack",
        "asreview.models.feature_extraction.base.issparse",
        "asreview.models.feature_extraction.base.np",
        "asreview.models.feature_extraction.doc2vec.np",
        "asreview.models.feature_extraction.embedding_idf.logging",
        "asreview.models.feature_extraction.embedding_idf.np",
        "asreview.models.feature_extraction.embedding_lstm.gzip",
        "asreview.models.feature_extraction.embedding_lstm.io",
        "asreview.models.feature_extraction.embedding_lstm.logging",
        "asreview.models.feature_extraction.embedding_lstm.np",
        "asreview.models.feature_extraction.embedding_lstm.Path",
        "asreview.models.feature_extraction.embedding_lstm.Process",
        "asreview.models.feature_extraction.embedding_lstm.Queue",
        "asreview.models.feature_extraction.embedding_lstm.urlopen",
        "asreview.models.feature_extraction.sbert.np",
        "asreview.models.query.base.abstractmethod",
        "asreview.models.query.cluster.np",
        "asreview.models.query.max.np",
        "asreview.models.query.mixed.np",
        "asreview.models.query.random.np",
        "asreview.models.query.uncertainty.np",
        "asreview.project.contextmanager",
        "asreview.project.csr_matrix",
        "asreview.project.datetime",
        "asreview.project.FileLock",
        "asreview.project.json",
        "asreview.project.jsonschema",
        "asreview.project.load_npz",
        "asreview.project.logging",
        "asreview.project.np",
        "asreview.project.os",
        "asreview.project.Path",
        "asreview.project.save_npz",
        "asreview.project.shutil",
        "asreview.project.tempfile",
        "asreview.project.uuid4",
        "asreview.project.wraps",
        "asreview.project.zipfile",
        "asreview.review.base.ABC",
        "asreview.review.base.logging",
        "asreview.review.base.np",
        "asreview.review.base.pd",
        "asreview.review.base.tqdm",
        "asreview.review.simulate.datetime",
        "asreview.review.simulate.np",
        "asreview.review.simulate.pd",
        "asreview.search.np",
        "asreview.search.re",
        "asreview.settings.logging",
        "asreview.settings.os",
        "asreview.state.base.ABC",
        "asreview.state.base.abstractmethod",
        "asreview.state.legacy.base.np",
        "asreview.state.legacy.dict.np",
        "asreview.state.legacy.hdf5",
        "asreview.state.sql_converter.np",
        "asreview.state.SQLiteState",
        "asreview.state.sqlstate.datetime",
        "asreview.state.sqlstate.json",
        "asreview.state.sqlstate.Path",
        "asreview.state.sqlstate.pd",
        "asreview.state.sqlstate.sqlite3",
        "asreview.utils.np",
        "asreview.utils.os",
        "asreview.utils.Path",
        "asreview.utils.pkg_resources",
        "asreview.utils.sys",
        "asreview.utils.urlparse",
        "asreview.webapp.api.np",
        "asreview.webapp.api.pd",
        "asreview.webapp.io.logging",
        "asreview.webapp.io.os",
        "asreview.webapp.io.Path",
        "asreview.webapp.io.pd",
        "asreview.webapp.io.pickle",
        "asreview.webapp.tests",
        "asreview.webapp"
    ]


actual_members = list_members(asreview)
expected_members = [
    "asreview.asreview_path",
    "asreview.ASReviewData",
    "asreview.ASReviewProject",
    "asreview.config.ASCII_LOGO",
    "asreview.config.COLUMN_DEFINITIONS",
    "asreview.config.DEFAULT_BALANCE_STRATEGY",
    "asreview.config.DEFAULT_FEATURE_EXTRACTION",
    "asreview.config.DEFAULT_MODEL",
    "asreview.config.DEFAULT_N_INSTANCES",
    "asreview.config.DEFAULT_N_PRIOR_EXCLUDED",
    "asreview.config.DEFAULT_N_PRIOR_INCLUDED",
    "asreview.config.DEFAULT_QUERY_STRATEGY",
    "asreview.config.EMAIL_ADDRESS",
    "asreview.config.GITHUB_PAGE",
    "asreview.config.KERAS_MODELS",
    "asreview.config.LABEL_NA",
    "asreview.config.LEGACY_STATE_EXTENSIONS",
    "asreview.config.PROJECT_MODE_EXPLORE",
    "asreview.config.PROJECT_MODE_ORACLE",
    "asreview.config.PROJECT_MODE_SIMULATE",
    "asreview.config.PROJECT_MODES",
    "asreview.config.SCHEMA",
    "asreview.config",
    "asreview.data.ASReviewData",
    "asreview.data.base._get_filename_from_url",
    "asreview.data.base.ASReviewData",
    "asreview.data.base.BadFileFormatError",
    "asreview.data.base.COLUMN_DEFINITIONS",
    "asreview.data.base.convert_keywords",
    "asreview.data.base.DatasetManager",
    "asreview.data.base.DatasetNotFoundError",
    "asreview.data.base.get_entry_points",
    "asreview.data.base.hashlib",
    "asreview.data.base.HTTPError",
    "asreview.data.base.is_iterable",
    "asreview.data.base.is_string_dtype",
    "asreview.data.base.is_url",
    "asreview.data.base.LABEL_NA",
    "asreview.data.base.load_data",
    "asreview.data.base.np",
    "asreview.data.base.PaperRecord",
    "asreview.data.base.Path",
    "asreview.data.base.pd",
    "asreview.data.base.type_from_column",
    "asreview.data.base.urlopen",
    "asreview.data.base.urlparse",
    "asreview.data.base",
    "asreview.data.load_data",
    "asreview.data",
    "asreview.datasets._download_from_metadata",
    "asreview.datasets.ABC",
    "asreview.datasets.abstractmethod",
    "asreview.datasets.BaseDataGroup",
    "asreview.datasets.BaseDataSet",
    "asreview.datasets.BenchmarkDataGroup",
    "asreview.datasets.DatasetManager",
    "asreview.datasets.DatasetNotFoundError",
    "asreview.datasets.get_entry_points",
    "asreview.datasets.is_iterable",
    "asreview.datasets.json",
    "asreview.datasets.NaturePublicationDataGroup",
    "asreview.datasets.Path",
    "asreview.datasets.socket",
    "asreview.datasets.URLError",
    "asreview.datasets.urlopen",
    "asreview.datasets",
    "asreview.entry_points.algorithms._format_algorithm",
    "asreview.entry_points.algorithms.AlgorithmsEntryPoint",
    "asreview.entry_points.algorithms.BaseEntryPoint",
    "asreview.entry_points.algorithms.list_balance_strategies",
    "asreview.entry_points.algorithms.list_classifiers",
    "asreview.entry_points.algorithms.list_feature_extraction",
    "asreview.entry_points.algorithms.list_query_strategies",
    "asreview.entry_points.algorithms",
    "asreview.entry_points.AlgorithmsEntryPoint",
    "asreview.entry_points.base._base_parser",
    "asreview.entry_points.base.ABC",
    "asreview.entry_points.base.abstractclassmethod",
    "asreview.entry_points.base.argparse",
    "asreview.entry_points.base.BaseEntryPoint",
    "asreview.entry_points.base.DeprecateAction",
    "asreview.entry_points.base.RawTextHelpFormatter",
    "asreview.entry_points.base.warnings",
    "asreview.entry_points.base",
    "asreview.entry_points.BaseEntryPoint",
    "asreview.entry_points.lab._base_parser",
    "asreview.entry_points.lab._lab_parser",
    "asreview.entry_points.lab.BaseEntryPoint",
    "asreview.entry_points.lab.DeprecateAction",
    "asreview.entry_points.lab.HOST_NAME",
    "asreview.entry_points.lab.LABEntryPoint",
    "asreview.entry_points.lab.main_run_model",
    "asreview.entry_points.lab.PORT_NUMBER",
    "asreview.entry_points.lab.WebRunModelEntryPoint",
    "asreview.entry_points.lab",
    "asreview.entry_points.LABEntryPoint",
    "asreview.entry_points.simulate._base_parser",
    "asreview.entry_points.simulate._get_dataset_path_from_args",
    "asreview.entry_points.simulate._set_log_verbosity",
    "asreview.entry_points.simulate._simulate_parser",
    "asreview.entry_points.simulate.ASCII_LOGO",
    "asreview.entry_points.simulate.ASCII_MSG_SIMULATE",
    "asreview.entry_points.simulate.ASReviewProject",
    "asreview.entry_points.simulate.ASReviewSettings",
    "asreview.entry_points.simulate.BaseEntryPoint",
    "asreview.entry_points.simulate.convert_id_to_idx",
    "asreview.entry_points.simulate.DEFAULT_BALANCE_STRATEGY",
    "asreview.entry_points.simulate.DEFAULT_FEATURE_EXTRACTION",
    "asreview.entry_points.simulate.DEFAULT_MODEL",
    "asreview.entry_points.simulate.DEFAULT_N_INSTANCES",
    "asreview.entry_points.simulate.DEFAULT_N_PRIOR_EXCLUDED",
    "asreview.entry_points.simulate.DEFAULT_N_PRIOR_INCLUDED",
    "asreview.entry_points.simulate.DEFAULT_QUERY_STRATEGY",
    "asreview.entry_points.simulate.DESCRIPTION_SIMULATE",
    "asreview.entry_points.simulate.EMAIL_ADDRESS",
    "asreview.entry_points.simulate.get_balance_model",
    "asreview.entry_points.simulate.get_classifier",
    "asreview.entry_points.simulate.get_feature_model",
    "asreview.entry_points.simulate.get_query_model",
    "asreview.entry_points.simulate.get_random_state",
    "asreview.entry_points.simulate.GITHUB_PAGE",
    "asreview.entry_points.simulate.load_data",
    "asreview.entry_points.simulate.logging",
    "asreview.entry_points.simulate.open_state",
    "asreview.entry_points.simulate.Path",
    "asreview.entry_points.simulate.ProjectExistsError",
    "asreview.entry_points.simulate.read_data",
    "asreview.entry_points.simulate.ReviewSimulate",
    "asreview.entry_points.simulate.shutil",
    "asreview.entry_points.simulate.SimulateEntryPoint",
    "asreview.entry_points.simulate.type_n_queries",
    "asreview.entry_points.simulate",
    "asreview.entry_points.SimulateEntryPoint",
    "asreview.entry_points.state_inspect._parse_state_inspect_args",
    "asreview.entry_points.state_inspect.argparse",
    "asreview.entry_points.state_inspect.BaseEntryPoint",
    "asreview.entry_points.state_inspect.get_project_path",
    "asreview.entry_points.state_inspect.open_state",
    "asreview.entry_points.state_inspect.Path",
    "asreview.entry_points.state_inspect.pd",
    "asreview.entry_points.state_inspect.StateInspectEntryPoint",
    "asreview.entry_points.state_inspect",
    "asreview.entry_points.StateInspectEntryPoint",
    "asreview.entry_points.WebRunModelEntryPoint",
    "asreview.entry_points",
    "asreview.exceptions.BadFileFormatError",
    "asreview.exceptions",
    "asreview.get_data_home",
    "asreview.io.csv_reader._standardize_dataframe",
    "asreview.io.csv_reader.CSVReader",
    "asreview.io.csv_reader.pd",
    "asreview.io.csv_reader",
    "asreview.io.csv_writer.CSVWriter",
    "asreview.io.csv_writer",
    "asreview.io.CSVReader",
    "asreview.io.CSVWriter",
    "asreview.io.excel_reader._standardize_dataframe",
    "asreview.io.excel_reader.COLUMN_DEFINITIONS",
    "asreview.io.excel_reader.ExcelReader",
    "asreview.io.excel_reader.pd",
    "asreview.io.excel_reader",
    "asreview.io.excel_writer.ExcelWriter",
    "asreview.io.excel_writer",
    "asreview.io.ExcelReader",
    "asreview.io.ExcelWriter",
    "asreview.io.list_readers",
    "asreview.io.list_writers",
    "asreview.io.paper_record.format_record",
    "asreview.io.paper_record.format_to_str",
    "asreview.io.paper_record.LABEL_NA",
    "asreview.io.paper_record.os",
    "asreview.io.paper_record.PaperRecord",
    "asreview.io.paper_record.pd",
    "asreview.io.paper_record.preview_record",
    "asreview.io.paper_record",
    "asreview.io.PaperRecord",
    "asreview.io.ris_reader._standardize_dataframe",
    "asreview.io.ris_reader.io",
    "asreview.io.ris_reader.is_url",
    "asreview.io.ris_reader.logging",
    "asreview.io.ris_reader.pandas",
    "asreview.io.ris_reader.re",
    "asreview.io.ris_reader.rispy",
    "asreview.io.ris_reader.RISReader",
    "asreview.io.ris_reader.urlopen",
    "asreview.io.ris_reader",
    "asreview.io.ris_writer.pd",
    "asreview.io.ris_writer.rispy",
    "asreview.io.ris_writer.RISWriter",
    "asreview.io.ris_writer",
    "asreview.io.RISReader",
    "asreview.io.RISWriter",
    "asreview.io.tsv_writer.TSVWriter",
    "asreview.io.tsv_writer",
    "asreview.io.TSVWriter",
    "asreview.io.utils._is_record_id_int",
    "asreview.io.utils._is_record_id_notnull",
    "asreview.io.utils._is_record_id_unique",
    "asreview.io.utils._reader_class_from_entry_point",
    "asreview.io.utils._standardize_dataframe",
    "asreview.io.utils._writer_class_from_entry_point",
    "asreview.io.utils.BadFileFormatError",
    "asreview.io.utils.COLUMN_DEFINITIONS",
    "asreview.io.utils.convert_keywords",
    "asreview.io.utils.get_reader_class",
    "asreview.io.utils.get_writer_class",
    "asreview.io.utils.LABEL_NA",
    "asreview.io.utils.list_reader_names",
    "asreview.io.utils.list_readers",
    "asreview.io.utils.list_writer_names",
    "asreview.io.utils.list_writers",
    "asreview.io.utils.logging",
    "asreview.io.utils.np",
    "asreview.io.utils.pd",
    "asreview.io.utils.type_from_column",
    "asreview.io.utils",
    "asreview.io",
    "asreview.list_readers",
    "asreview.list_writers",
    "asreview.load_data",
    "asreview.load_embedding",
    "asreview.models._list_classifiers",
    "asreview.models.balance.base.abstractmethod",
    "asreview.models.balance.base.BaseBalance",
    "asreview.models.balance.base.BaseModel",
    "asreview.models.balance.base",
    "asreview.models.balance.double._one_weight",
    "asreview.models.balance.double._zero_weight",
    "asreview.models.balance.double.BaseBalance",
    "asreview.models.balance.double.DoubleBalance",
    "asreview.models.balance.double.fill_training",
    "asreview.models.balance.double.get_random_state",
    "asreview.models.balance.double.np",
    "asreview.models.balance.double.random_round",
    "asreview.models.balance.double.SimpleBalance",
    "asreview.models.balance.double",
    "asreview.models.balance.DoubleBalance",
    "asreview.models.balance.get_balance_class",
    "asreview.models.balance.get_balance_model",
    "asreview.models.balance.list_balance_strategies",
    "asreview.models.balance.simple.BaseBalance",
    "asreview.models.balance.simple.SimpleBalance",
    "asreview.models.balance.simple",
    "asreview.models.balance.SimpleBalance",
    "asreview.models.balance.triple._get_triple_dist",
    "asreview.models.balance.triple._one_weight",
    "asreview.models.balance.triple._zero_max_weight",
    "asreview.models.balance.triple._zero_weight",
    "asreview.models.balance.triple.BaseBalance",
    "asreview.models.balance.triple.DoubleBalance",
    "asreview.models.balance.triple.fill_training",
    "asreview.models.balance.triple.get_random_state",
    "asreview.models.balance.triple.logging",
    "asreview.models.balance.triple.np",
    "asreview.models.balance.triple.random_round",
    "asreview.models.balance.triple.TripleBalance",
    "asreview.models.balance.triple",
    "asreview.models.balance.TripleBalance",
    "asreview.models.balance.undersample.BaseBalance",
    "asreview.models.balance.undersample.get_random_state",
    "asreview.models.balance.undersample.np",
    "asreview.models.balance.undersample.UndersampleBalance",
    "asreview.models.balance.undersample",
    "asreview.models.balance.UndersampleBalance",
    "asreview.models.balance.utils._model_class_from_entry_point",
    "asreview.models.balance.utils.get_balance_class",
    "asreview.models.balance.utils.get_balance_model",
    "asreview.models.balance.utils.list_balance_strategies",
    "asreview.models.balance.utils.list_model_names",
    "asreview.models.balance.utils",
    "asreview.models.balance",
    "asreview.models.base.ABC",
    "asreview.models.base.BaseModel",
    "asreview.models.base.inspect",
    "asreview.models.base.np",
    "asreview.models.base.sig_to_param",
    "asreview.models.base",
    "asreview.models.classifiers.base.BaseModel",
    "asreview.models.classifiers.base.BaseTrainClassifier",
    "asreview.models.classifiers.base",
    "asreview.models.classifiers.get_classifier_class",
    "asreview.models.classifiers.get_classifier",
    "asreview.models.classifiers.list_classifiers",
    "asreview.models.classifiers.logistic._set_class_weight",
    "asreview.models.classifiers.logistic.BaseTrainClassifier",
    "asreview.models.classifiers.logistic.logging",
    "asreview.models.classifiers.logistic.LogisticClassifier",
    "asreview.models.classifiers.logistic.LogisticRegression",
    "asreview.models.classifiers.logistic",
    "asreview.models.classifiers.LogisticClassifier",
    "asreview.models.classifiers.lstm_base._check_tensorflow",
    "asreview.models.classifiers.lstm_base._create_lstm_base_model",
    "asreview.models.classifiers.lstm_base._get_optimizer",
    "asreview.models.classifiers.lstm_base._set_class_weight",
    "asreview.models.classifiers.lstm_base.BaseTrainClassifier",
    "asreview.models.classifiers.lstm_base.isspmatrix",
    "asreview.models.classifiers.lstm_base.logging",
    "asreview.models.classifiers.lstm_base.LSTMBaseClassifier",
    "asreview.models.classifiers.lstm_base.TF_AVAILABLE",
    "asreview.models.classifiers.lstm_base",
    "asreview.models.classifiers.lstm_pool._check_tensorflow",
    "asreview.models.classifiers.lstm_pool._create_lstm_pool_model",
    "asreview.models.classifiers.lstm_pool._get_optimizer",
    "asreview.models.classifiers.lstm_pool._set_class_weight",
    "asreview.models.classifiers.lstm_pool.BaseTrainClassifier",
    "asreview.models.classifiers.lstm_pool.isspmatrix",
    "asreview.models.classifiers.lstm_pool.logging",
    "asreview.models.classifiers.lstm_pool.LSTMPoolClassifier",
    "asreview.models.classifiers.lstm_pool.TF_AVAILABLE",
    "asreview.models.classifiers.lstm_pool",
    "asreview.models.classifiers.LSTMBaseClassifier",
    "asreview.models.classifiers.LSTMPoolClassifier",
    "asreview.models.classifiers.NaiveBayesClassifier",
    "asreview.models.classifiers.nb.BaseTrainClassifier",
    "asreview.models.classifiers.nb.logging",
    "asreview.models.classifiers.nb.MultinomialNB",
    "asreview.models.classifiers.nb.NaiveBayesClassifier",
    "asreview.models.classifiers.nb",
    "asreview.models.classifiers.nn_2_layer._check_tensorflow",
    "asreview.models.classifiers.nn_2_layer._create_dense_nn_model",
    "asreview.models.classifiers.nn_2_layer._get_optimizer",
    "asreview.models.classifiers.nn_2_layer._set_class_weight",
    "asreview.models.classifiers.nn_2_layer.BaseTrainClassifier",
    "asreview.models.classifiers.nn_2_layer.logging",
    "asreview.models.classifiers.nn_2_layer.NN2LayerClassifier",
    "asreview.models.classifiers.nn_2_layer.scipy",
    "asreview.models.classifiers.nn_2_layer.TF_AVAILABLE",
    "asreview.models.classifiers.nn_2_layer",
    "asreview.models.classifiers.NN2LayerClassifier",
    "asreview.models.classifiers.RandomForestClassifier",
    "asreview.models.classifiers.rf._set_class_weight",
    "asreview.models.classifiers.rf.BaseTrainClassifier",
    "asreview.models.classifiers.rf.RandomForestClassifier",
    "asreview.models.classifiers.rf.SKRandomForestClassifier",
    "asreview.models.classifiers.rf",
    "asreview.models.classifiers.svm._set_class_weight",
    "asreview.models.classifiers.svm.BaseTrainClassifier",
    "asreview.models.classifiers.svm.SVC",
    "asreview.models.classifiers.svm.SVMClassifier",
    "asreview.models.classifiers.svm",
    "asreview.models.classifiers.SVMClassifier",
    "asreview.models.classifiers.utils._model_class_from_entry_point",
    "asreview.models.classifiers.utils._set_class_weight",
    "asreview.models.classifiers.utils.get_classifier_class",
    "asreview.models.classifiers.utils.get_classifier",
    "asreview.models.classifiers.utils.list_classifiers",
    "asreview.models.classifiers.utils.list_model_names",
    "asreview.models.classifiers.utils.logging",
    "asreview.models.classifiers.utils",
    "asreview.models.classifiers",
    "asreview.models.feature_extraction.base.abstractmethod",
    "asreview.models.feature_extraction.base.BaseFeatureExtraction",
    "asreview.models.feature_extraction.base.BaseModel",
    "asreview.models.feature_extraction.base.hstack",
    "asreview.models.feature_extraction.base.issparse",
    "asreview.models.feature_extraction.base.np",
    "asreview.models.feature_extraction.base",
    "asreview.models.feature_extraction.doc2vec._check_gensim",
    "asreview.models.feature_extraction.doc2vec._train_model",
    "asreview.models.feature_extraction.doc2vec._transform_text",
    "asreview.models.feature_extraction.doc2vec.BaseFeatureExtraction",
    "asreview.models.feature_extraction.doc2vec.Doc2Vec",
    "asreview.models.feature_extraction.doc2vec.GENSIM_AVAILABLE",
    "asreview.models.feature_extraction.doc2vec.np",
    "asreview.models.feature_extraction.doc2vec",
    "asreview.models.feature_extraction.Doc2Vec",
    "asreview.models.feature_extraction.embedding_idf._check_tensorflow",
    "asreview.models.feature_extraction.embedding_idf._get_freq_dict",
    "asreview.models.feature_extraction.embedding_idf._get_idf",
    "asreview.models.feature_extraction.embedding_idf._get_X_from_dict",
    "asreview.models.feature_extraction.embedding_idf.BaseFeatureExtraction",
    "asreview.models.feature_extraction.embedding_idf.EmbeddingIdf",
    "asreview.models.feature_extraction.embedding_idf.get_random_state",
    "asreview.models.feature_extraction.embedding_idf.load_embedding",
    "asreview.models.feature_extraction.embedding_idf.logging",
    "asreview.models.feature_extraction.embedding_idf.np",
    "asreview.models.feature_extraction.embedding_idf.TF_AVAILABLE",
    "asreview.models.feature_extraction.embedding_idf",
    "asreview.models.feature_extraction.embedding_lstm._check_tensorflow",
    "asreview.models.feature_extraction.embedding_lstm._embedding_aggregator",
    "asreview.models.feature_extraction.embedding_lstm._embedding_reader",
    "asreview.models.feature_extraction.embedding_lstm._embedding_worker",
    "asreview.models.feature_extraction.embedding_lstm.BaseFeatureExtraction",
    "asreview.models.feature_extraction.embedding_lstm.cpu_count",
    "asreview.models.feature_extraction.embedding_lstm.download_embedding",
    "asreview.models.feature_extraction.embedding_lstm.EMBEDDING_EN",
    "asreview.models.feature_extraction.embedding_lstm.EmbeddingLSTM",
    "asreview.models.feature_extraction.embedding_lstm.get_data_home",
    "asreview.models.feature_extraction.embedding_lstm.gzip",
    "asreview.models.feature_extraction.embedding_lstm.io",
    "asreview.models.feature_extraction.embedding_lstm.load_embedding",
    "asreview.models.feature_extraction.embedding_lstm.logging",
    "asreview.models.feature_extraction.embedding_lstm.loop_sequences",
    "asreview.models.feature_extraction.embedding_lstm.np",
    "asreview.models.feature_extraction.embedding_lstm.Path",
    "asreview.models.feature_extraction.embedding_lstm.Process",
    "asreview.models.feature_extraction.embedding_lstm.Queue",
    "asreview.models.feature_extraction.embedding_lstm.sample_embedding",
    "asreview.models.feature_extraction.embedding_lstm.text_to_features",
    "asreview.models.feature_extraction.embedding_lstm.TF_AVAILABLE",
    "asreview.models.feature_extraction.embedding_lstm.urlopen",
    "asreview.models.feature_extraction.embedding_lstm",
    "asreview.models.feature_extraction.EmbeddingIdf",
    "asreview.models.feature_extraction.EmbeddingLSTM",
    "asreview.models.feature_extraction.get_feature_class",
    "asreview.models.feature_extraction.get_feature_model",
    "asreview.models.feature_extraction.list_feature_extraction",
    "asreview.models.feature_extraction.sbert._check_st",
    "asreview.models.feature_extraction.sbert.BaseFeatureExtraction",
    "asreview.models.feature_extraction.sbert.np",
    "asreview.models.feature_extraction.sbert.SBERT",
    "asreview.models.feature_extraction.sbert.ST_AVAILABLE",
    "asreview.models.feature_extraction.sbert",
    "asreview.models.feature_extraction.SBERT",
    "asreview.models.feature_extraction.tfidf.BaseFeatureExtraction",
    "asreview.models.feature_extraction.tfidf.Tfidf",
    "asreview.models.feature_extraction.tfidf.TfidfVectorizer",
    "asreview.models.feature_extraction.tfidf",
    "asreview.models.feature_extraction.Tfidf",
    "asreview.models.feature_extraction.utils._model_class_from_entry_point",
    "asreview.models.feature_extraction.utils.get_feature_class",
    "asreview.models.feature_extraction.utils.get_feature_model",
    "asreview.models.feature_extraction.utils.list_feature_extraction",
    "asreview.models.feature_extraction.utils.list_model_names",
    "asreview.models.feature_extraction.utils",
    "asreview.models.feature_extraction",
    "asreview.models.get_classifier_class",
    "asreview.models.get_classifier",
    "asreview.models.LogisticClassifier",
    "asreview.models.LSTMBaseClassifier",
    "asreview.models.LSTMPoolClassifier",
    "asreview.models.NaiveBayesClassifier",
    "asreview.models.NN2LayerClassifier",
    "asreview.models.query.base.abstractmethod",
    "asreview.models.query.base.BaseModel",
    "asreview.models.query.base.BaseQueryStrategy",
    "asreview.models.query.base.ProbaQueryStrategy",
    "asreview.models.query.base",
    "asreview.models.query.cluster.ClusterQuery",
    "asreview.models.query.cluster.get_random_state",
    "asreview.models.query.cluster.KMeans",
    "asreview.models.query.cluster.MaxQuery",
    "asreview.models.query.cluster.np",
    "asreview.models.query.cluster.ProbaQueryStrategy",
    "asreview.models.query.cluster",
    "asreview.models.query.ClusterQuery",
    "asreview.models.query.get_query_class",
    "asreview.models.query.get_query_model",
    "asreview.models.query.list_query_strategies",
    "asreview.models.query.max.MaxQuery",
    "asreview.models.query.max.np",
    "asreview.models.query.max.ProbaQueryStrategy",
    "asreview.models.query.max",
    "asreview.models.query.MaxQuery",
    "asreview.models.query.MaxRandomQuery",
    "asreview.models.query.MaxUncertaintyQuery",
    "asreview.models.query.mixed._parse_mixed_kwargs",
    "asreview.models.query.mixed.BaseQueryStrategy",
    "asreview.models.query.mixed.get_query_model",
    "asreview.models.query.mixed.get_random_state",
    "asreview.models.query.mixed.MaxRandomQuery",
    "asreview.models.query.mixed.MaxUncertaintyQuery",
    "asreview.models.query.mixed.MixedQuery",
    "asreview.models.query.mixed.np",
    "asreview.models.query.mixed",
    "asreview.models.query.MixedQuery",
    "asreview.models.query.random.BaseQueryStrategy",
    "asreview.models.query.random.get_random_state",
    "asreview.models.query.random.np",
    "asreview.models.query.random.RandomQuery",
    "asreview.models.query.random",
    "asreview.models.query.RandomQuery",
    "asreview.models.query.uncertainty.np",
    "asreview.models.query.uncertainty.ProbaQueryStrategy",
    "asreview.models.query.uncertainty.UncertaintyQuery",
    "asreview.models.query.uncertainty",
    "asreview.models.query.UncertaintyQuery",
    "asreview.models.query.utils._model_class_from_entry_point",
    "asreview.models.query.utils.get_query_class",
    "asreview.models.query.utils.get_query_model",
    "asreview.models.query.utils.list_model_names",
    "asreview.models.query.utils.list_query_strategies",
    "asreview.models.query.utils",
    "asreview.models.query",
    "asreview.models.RandomForestClassifier",
    "asreview.models.SVMClassifier",
    "asreview.models",
    "asreview.open_state",
    "asreview.project._create_project_id",
    "asreview.project.asreview_path",
    "asreview.project.ASReviewProject",
    "asreview.project.contextmanager",
    "asreview.project.csr_matrix",
    "asreview.project.datetime",
    "asreview.project.FileLock",
    "asreview.project.get_project_path",
    "asreview.project.get_versions",
    "asreview.project.is_project",
    "asreview.project.is_v0_project",
    "asreview.project.json",
    "asreview.project.jsonschema",
    "asreview.project.LABEL_NA",
    "asreview.project.list_asreview_projects",
    "asreview.project.load_npz",
    "asreview.project.logging",
    "asreview.project.np",
    "asreview.project.open_state",
    "asreview.project.os",
    "asreview.project.PATH_FEATURE_MATRICES",
    "asreview.project.PATH_PROJECT_CONFIG_LOCK",
    "asreview.project.PATH_PROJECT_CONFIG",
    "asreview.project.Path",
    "asreview.project.project_from_id",
    "asreview.project.PROJECT_MODE_SIMULATE",
    "asreview.project.PROJECT_MODES",
    "asreview.project.ProjectError",
    "asreview.project.ProjectExistsError",
    "asreview.project.ProjectNotFoundError",
    "asreview.project.read_data",
    "asreview.project.save_npz",
    "asreview.project.SCHEMA",
    "asreview.project.shutil",
    "asreview.project.SQLiteState",
    "asreview.project.StateNotFoundError",
    "asreview.project.tempfile",
    "asreview.project.uuid4",
    "asreview.project.wraps",
    "asreview.project.zipfile",
    "asreview.project",
    "asreview.review",
    "asreview.review.BaseReview",
    "asreview.review.ReviewSimulate",
    "asreview.review.base",
    "asreview.review.base.ABC",
    "asreview.review.base.ASReviewSettings",
    "asreview.review.base.BaseReview",
    "asreview.review.base.DEFAULT_N_INSTANCES",
    "asreview.review.base.LABEL_NA",
    "asreview.review.base.MaxQuery",
    "asreview.review.base.NaiveBayesClassifier",
    "asreview.review.base.SimpleBalance",
    "asreview.review.base.Tfidf",
    "asreview.review.base.logging",
    "asreview.review.base.np",
    "asreview.review.base.open_state",
    "asreview.review.base.pd",
    "asreview.review.base.tqdm",
    "asreview.review.simulate",
    "asreview.review.simulate.BaseReview",
    "asreview.review.simulate.LABEL_NA",
    "asreview.review.simulate.ReviewSimulate",
    "asreview.review.simulate.datetime",
    "asreview.review.simulate.get_random_state",
    "asreview.review.simulate.np",
    "asreview.review.simulate.open_state",
    "asreview.review.simulate.pd",
    "asreview.review.simulate.sample_prior_knowledge",
    "asreview.sample_embedding",
    "asreview.settings._convert_types",
    "asreview.settings._map_settings_type",
    "asreview.settings.ASReviewSettings",
    "asreview.settings.ConfigParser",
    "asreview.settings.DEFAULT_N_INSTANCES",
    "asreview.settings.get_balance_model",
    "asreview.settings.get_classifier",
    "asreview.settings.get_feature_model",
    "asreview.settings.get_query_model",
    "asreview.settings.logging",
    "asreview.settings.os",
    "asreview.settings.pretty_format",
    "asreview.settings.SETTINGS_TYPE_DICT",
    "asreview.settings.type_n_queries",
    "asreview.settings",
    "asreview.state.base.ABC",
    "asreview.state.base.abstractmethod",
    "asreview.state.base.BaseState",
    "asreview.state.base",
    "asreview.state.BaseState",
    "asreview.state.errors.BadStateFileError",
    "asreview.state.errors.StateError",
    "asreview.state.errors.StateNotFoundError",
    "asreview.state.errors",
    "asreview.state.SQLiteState",
    "asreview.state.sqlstate.ASReviewSettings",
    "asreview.state.sqlstate.BaseState",
    "asreview.state.sqlstate.datetime",
    "asreview.state.sqlstate.get_versions",
    "asreview.state.sqlstate.json",
    "asreview.state.sqlstate.Path",
    "asreview.state.sqlstate.pd",
    "asreview.state.sqlstate.REQUIRED_TABLES",
    "asreview.state.sqlstate.RESULTS_TABLE_COLUMNS",
    "asreview.state.sqlstate.SETTINGS_METADATA_KEYS",
    "asreview.state.sqlstate.sqlite3",
    "asreview.state.sqlstate.SQLiteState",
    "asreview.state.sqlstate.StateError",
    "asreview.state.sqlstate.StateNotFoundError",
    "asreview.state.sqlstate",
    "asreview.state",
    "asreview.text_to_features",
    "asreview.types.type_n_queries",
    "asreview.types",
    "asreview.utils._get_executable",
    "asreview.utils._model_class_from_entry_point",
    "asreview.utils._reader_class_from_entry_point",
    "asreview.utils._safe_dict_update",
    "asreview.utils._unsafe_dict_update",
    "asreview.utils._writer_class_from_entry_point",
    "asreview.utils.asreview_path",
    "asreview.utils.format_to_str",
    "asreview.utils.get_data_home",
    "asreview.utils.get_entry_points",
    "asreview.utils.get_random_state",
    "asreview.utils.is_iterable",
    "asreview.utils.is_url",
    "asreview.utils.list_model_names",
    "asreview.utils.list_reader_names",
    "asreview.utils.list_writer_names",
    "asreview.utils.np",
    "asreview.utils.os",
    "asreview.utils.Path",
    "asreview.utils.pkg_resources",
    "asreview.utils.pretty_format",
    "asreview.utils.urlparse",
    "asreview.utils"
]


@pytest.mark.parametrize("expected_member", expected_members)
def test_api_expected_members_present(expected_member):
    assert expected_member in actual_members, f"Didn't find expected member {expected_member} in the API."


@pytest.mark.parametrize("actual_member", actual_members)
def test_api_no_unintentional_exports(actual_member):
    assert actual_member in expected_members, f"Found unexpected member {actual_member} in the API."
